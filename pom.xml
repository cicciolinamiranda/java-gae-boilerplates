<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>io.spring.platform</groupId>
        <artifactId>platform-bom</artifactId>
        <version>1.1.2.RELEASE</version>
    </parent>
    <groupId>com.cloudsherpas.poc</groupId>
    <artifactId>spring-gae-poc-parent</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>pom</packaging>

    <prerequisites>
        <maven>3.1.0</maven>
    </prerequisites>

    <modules>
        <module>spring-boot-gae-sql</module>
        <module>spring-gae-sql</module>
    </modules>

    <properties>
        <appengine.version>1.9.23</appengine.version>
        <gcloud.plugin.version>0.9.58.v20150505</gcloud.plugin.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.showDeprecation>true</maven.compiler.showDeprecation>
    </properties>

    <!-- Not to be confused with dependencyManagement these dependencies 
        WILL be applied to inheriting POMs -->
    <dependencies>
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>appengine-api-1.0-sdk</artifactId>
            <version>${appengine.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>appengine-endpoints</artifactId>
            <version>${appengine.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>2.5</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>appengine-testing</artifactId>
            <version>${appengine.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>appengine-api-stubs</artifactId>
            <version>${appengine.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>


    <build>
        <!-- Not to be confused with pluginManagement these plugins WILL 
            be applied to inheriting POMs -->
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                    <executions>
                        <execution>
                            <phase>compile</phase>
                            <goals>
                                <goal>display-dependency-updates</goal>
                                <goal>display-plugin-updates</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <configuration>
                        <source>1.7</source>
                        <target>1.7</target>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <configuration>
                        <webXml>${project.build.directory}/generated-sources/appengine-endpoints/WEB-INF/web.xml</webXml>
                        <webResources>
                            <resource>
                                <!-- this is relative to the pom.xml directory -->
                                <directory>${project.build.directory}/generated-sources/appengine-endpoints</directory>
                                <!-- the list has a default value of ** -->
                                <includes>
                                    <include>WEB-INF/*.discovery</include>
                                    <include>WEB-INF/*.api</include>
                                </includes>
                            </resource>
                        </webResources>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>com.google.appengine</groupId>
                    <artifactId>appengine-maven-plugin</artifactId>
                    <version>${appengine.version}</version>
                    <configuration>
                        <enableJarClasses>false</enableJarClasses>
                        <version>${app.version}</version>
                        <!-- Comment in the below snippet to bind to all 
                            IPs instead of just localhost -->
                        <!-- address>0.0.0.0</address> <port>8080</port -->
                        <!-- Comment in the below snippet to enable local 
                            debugging with a remote debugger like those included with Eclipse or IntelliJ -->
                        <!-- jvmFlags> <jvmFlag>-agentlib:jdwp=transport=dt_socket,address=8000,server=y,suspend=n</jvmFlag> 
                            </jvmFlags -->
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>endpoints_get_discovery_doc</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>com.google.appengine</groupId>
                    <artifactId>gcloud-maven-plugin</artifactId>
                    <version>${gcloud.plugin.version}</version>
                    <configuration>
                        <set_default>true</set_default>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

</project>
